import os
from datetime import datetime, timedelta
import telebot
from threading import Thread
import time
import flask
from colorama import Fore


bot = telebot.TeleBot(os.getenv("bot"))

if os.path.exists("remind.txt"):
    print(f"{Fore.LIGHTGREEN_EX}[INFO] remind.txt found, loading user IDs...{Fore.RESET}")
    with open("remind.txt", "r") as file:
        remind = [int(line.strip()) for line in file if line.strip().isdigit()]
        print(f"{Fore.LIGHTGREEN_EX}[INFO] Current remind list is {remind}")

else:
    print(f"{Fore.LIGHTYELLOW_EX}[INFO] remind.txt not found, creating a new one...{Fore.RESET}")
    with open("remind.txt", "w") as file:
        file.write("")

    remind = []


days = {"Monday": {"8:00":"1. –§—ñ–∑–∏—á–Ω–µ –≤–∏—Ö–æ–≤–∞–Ω–Ω—è, —á–∞—Å—Ç–∏–Ω–∞ 1\n8:00-9:20\n<b>–ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>",
                   "10:05":None,
                   "11:40":"3. –í–∏—â–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —á–∞—Å—Ç–∏–Ω–∞ 1\n11:40-13:00\n<b>–ö—É—á–º–∞ –ú.–Ü., 322 I –Ω.–∫., –õ–µ–∫—Ü—ñ—è</b>",
                   "13:15":"4. –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞ –∑–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–º —Å–ø—Ä—è–º—É–≤–∞–Ω–Ω—è–º\n13:15-14:35\n<b>–®–º—ñ–ª–∏–∫ –Ü.–î., 405 I –Ω.–∫. –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>",
                   "14:50":"5. –Ü–Ω–æ–∑–µ–º–Ω–∞ –º–æ–≤–∞ –∑–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–º —Å–ø—Ä—è–º—É–≤–∞–Ω–Ω—è–º, —á–∞—Å—Ç–∏–Ω–∞ 1\n14:50-16:10\n<b>–ú–∏–∫–ª–∞—à –õ.–¢.(1 –ø—ñ–¥–≥—Ä—É–ø–∞)\\–í–∏—Å–ª–æ–±–æ–¥—Å—å–∫–∞ –Ü.–ú.(2 –ø—ñ–¥–≥—Ä—É–ø–∞), ??? ? –Ω.–∫. –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>",
                   "16:25":None},

        "Tuesday": {"8:30":None,
                   "10:05":"2. –§—ñ–∑–∏–∫–∞\n10:05-11:25\n<b>–µ–ª.2–ª–∞–± –ì–æ–ª. –Ω.–∫., –º–æ–ª.2–ª–∞–± –ì–æ–ª. –Ω.–∫., –æ–ø—Ç.2–ª–∞–± –ì–æ–ª. –Ω.–∫., –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞</b>",
                   "11:40":"3. –§—ñ–∑–∏–∫–∞\n11:40-13:00\n<b>–†—É–¥–∫–∞ –ú.–ú., 124 –ì–æ–ª. –Ω.–∫., –õ–µ–∫—Ü—ñ—è</b>",
                   "13:15":"4. –§—ñ–∑–∏–∫–∞\n13:15-14:35\n<b>–†—É–¥–∫–∞ –ú.–ú., 134 –ì–æ–ª. –Ω.–∫., –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>\n<b>–ó–ù–ê–ú–ï–ù–ù–ò–ö</b>",
                   "14:50":None,
                   "16:25":None},

        "Wednesday": {"8:30":"1. –í–∏—â–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —á–∞—Å—Ç–∏–Ω–∞ 1\n8:30-9:50\n<b>–°—Ç—Ä–∞–ø –ù.–Ü., 405 I –Ω.–∫., –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>\n<b>–ß–ò–°–ï–õ–¨–ù–ò–ö</b>\n\n\n1. –í–∏—â–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —á–∞—Å—Ç–∏–Ω–∞ 1\n8.30-9.50\n<b>–ö—É—á–º–∞ –ú.–Ü., 322 I –Ω.–∫., –õ–µ–∫—Ü—ñ—è</b>\n<b>–ó–ù–ê–ú–ï–ù–ù–ò–ö</b>",
                   "10:05":"2. –í–∏—â–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —á–∞—Å—Ç–∏–Ω–∞ 1\n10:05-11:25\n<b>–°—Ç—Ä–∞–ø –ù.–Ü., 405 I –Ω.–∫., –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>",
                   "11:40":"3. –§—ñ–∑–∏–∫–∞\n11:40-13:00\n<b>–†—É–¥–∫–∞ –ú.–ú., 134 –ì–æ–ª. –Ω.–∫., –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>\n<b>–ó–ù–ê–ú–ï–ù–ù–ò–ö</b>",
                   "13:15":"4. –û—Å–Ω–æ–≤–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–æ—ó —Ç–∞ –∫—ñ–±–µ—Ä–Ω–µ—Ç–∏—á–Ω–æ—ó –±–µ–∑–ø–µ–∫–∏\n14:50-16:10\n<b>–®–≤–µ–¥ –ú.–Ñ., 212 XIX –Ω.–∫., –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>\n<b>–ß–ò–°–ï–õ–¨–ù–ò–ö</b>",
                   "14:50":None,
                   "16:25":None},

        "Thursday":{"8:30":"1. –û—Å–Ω–æ–≤–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–æ—ó —Ç–∞ –∫—ñ–±–µ—Ä–Ω–µ—Ç–∏—á–Ω–æ—ó –±–µ–∑–ø–µ–∫–∏\n8:00-9:20\n<b>–î—É–¥–∏–∫–µ–≤–∏—á –í.–ë., 208 XIX –Ω.–∫., –õ–µ–∫—Ü—ñ—è</b>",
                   "10:05":"2. –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, —á–∞—Å—Ç–∏–Ω–∞ 1\n10:05-11:25\n<b>–°–æ–≤–∏–Ω –Ø.–†., 208 XIX –Ω.–∫., –õ–µ–∫—Ü—ñ—è</b>",
                   "11:40":None,
                   "13:15":None,
                   "14:50":None,
                   "16:25":None},

        "Friday": {"8:30":"1. –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, —á–∞—Å—Ç–∏–Ω–∞ 1\n8:00-9:20\n<b>–ü–æ–±–µ—Ä–µ–∂–Ω–∏–∫ –í.–û., 232 XX –Ω.–∫., –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞</b>\n\n\n<b>1 –ì–†–£–ü–ê</b>",
                   "10:05":"2. –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, —á–∞—Å—Ç–∏–Ω–∞ 1\n10:05-11:25\n<b>–ü–æ–±–µ—Ä–µ–∂–Ω–∏–∫ –í.–û., 221 XIX –Ω.–∫., –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞</b>\n\n\n<b>2 –ì–†–£–ü–ê</b>",
                   "11:40":"3. –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, —á–∞—Å—Ç–∏–Ω–∞ 1\n11:40-13:00\n<b>–ö–æ–ª–±–∞—Å–∏–Ω—Å—å–∫–∏–π –Ü.–í., 211 XIX –Ω.–∫., –ü—Ä–∞–∫—Ç–∏—á–Ω–∞</b>",
                   "13:15":None,
                   "14:50":None,
                   "16:25":None}}

@bot.message_handler(commands=["start"])
def start(message):
    menu = telebot.types.InlineKeyboardMarkup()
    if message.chat.id not in remind: menu.add(telebot.types.InlineKeyboardButton("‚úÖ–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è‚úÖ", callback_data="enable_reminder"))
    else: menu.add(telebot.types.InlineKeyboardButton("‚ùå–í–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è‚ùå", callback_data="disable_reminder"))
    menu.add(telebot.types.InlineKeyboardButton("üîî–†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñüîî", callback_data="today"))
    bot.send_message(message.chat.id, "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –∑ —Ä–æ–∑–∫–ª–∞–¥–æ–º –∑–∞–Ω—è—Ç—å. –û–±–µ—Ä–∏ —â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∏–∑—É!", reply_markup=menu)

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):

    if call.data == "refresh":
        call.data = "today"
        bot.edit_message_text(message_id=call.message.id ,chat_id=call.message.chat.id, text="–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ—Å–Ω–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —á–∞—Å—É...", parse_mode="HTML")

    elif call.data == "back":
        menu = telebot.types.InlineKeyboardMarkup()
        if call.message.chat.id not in remind: menu.add(telebot.types.InlineKeyboardButton("‚úÖ–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è‚úÖ", callback_data="enable_reminder"))
        else: menu.add(telebot.types.InlineKeyboardButton("‚ùå–í–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è‚ùå", callback_data="disable_reminder"))
        menu.add(telebot.types.InlineKeyboardButton("üîî–†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñüîî", callback_data="today"))
        bot.edit_message_text(message_id=call.message.id ,chat_id=call.message.chat.id, text="–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –∑ —Ä–æ–∑–∫–ª–∞–¥–æ–º –∑–∞–Ω—è—Ç—å. –û–±–µ—Ä–∏ —â–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∏–∑—É!", parse_mode="HTML", reply_markup=menu)

    elif call.data == "enable_reminder":
        if call.from_user.id in remind:
            kb = telebot.types.InlineKeyboardMarkup()
            kb.add(telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data="back"))
            bot.edit_message_text(message_id=call.message.id ,chat_id=call.message.chat.id, text="–ê–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∂–µ —É–≤—ñ–º–∫–Ω–µ–Ω–æ! –í–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞ 15 —Ö–≤–∏–ª–∏–Ω –¥–æ –ø–æ—á–∞—Ç–∫—É –∫–æ–∂–Ω–æ–≥–æ –∑–∞–Ω—è—Ç—Ç—è.", parse_mode="HTML", reply_markup=kb)
            return

        kb = telebot.types.InlineKeyboardMarkup()
        kb.add(telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data="back"))
        remind.append(call.message.chat.id)
        bot.edit_message_text(message_id=call.message.id ,chat_id=call.message.chat.id, text="–ê–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω–æ! –í–∏ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∑–∞ 15 —Ö–≤–∏–ª–∏–Ω –¥–æ –ø–æ—á–∞—Ç–∫—É –∫–æ–∂–Ω–æ–≥–æ –∑–∞–Ω—è—Ç—Ç—è.", parse_mode="HTML", reply_markup=kb)

    elif call.data == "disable_reminder":
        if call.from_user.id not in remind:
            kb = telebot.types.InlineKeyboardMarkup()
            kb.add(telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data="back"))
            bot.edit_message_text(message_id=call.message.id ,chat_id=call.message.chat.id, text="–ê–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∂–µ –≤–∏–º–∫–Ω–µ–Ω–æ! –í–∏ –Ω–µ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –∑–∞–Ω—è—Ç—Ç—è.", parse_mode="HTML", reply_markup=kb)
            return

        kb = telebot.types.InlineKeyboardMarkup()
        kb.add(telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data="back"))
        remind.remove(call.message.chat.id)
        bot.edit_message_text(message_id=call.message.id ,chat_id=call.message.chat.id, text="–ê–≤—Ç–æ-–Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω–æ! –í–∏ –Ω–µ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –∑–∞–Ω—è—Ç—Ç—è.", parse_mode="HTML", reply_markup=kb)


    if call.data == "today":
        kb = telebot.types.InlineKeyboardMarkup()
        kb.add(telebot.types.InlineKeyboardButton("–û–Ω–æ–≤–∏—Ç–∏ üè´", callback_data="refresh"))
        kb.add(telebot.types.InlineKeyboardButton("–ù–∞–∑–∞–¥ üîô", callback_data="back"))
        now = datetime.now()
        weekday = now.strftime("%A")
        if weekday in days:
            schedule = days[weekday]
            response = f"üìÖ –†–æ–∑–∫–ª–∞–¥ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ:\n\n"
            for time_slot, details in schedule.items():
                if details:
                    response += f"üïí {time_slot}\n{details}\n\n"
            bot.edit_message_text(message_id=call.message.id ,chat_id=call.message.chat.id, text=response, parse_mode="HTML", reply_markup=kb)
        else:
            bot.edit_message_text(message_id=call.message.id, chat_id=call.message.chat.id, text="–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏–π! –ù–∞—Å–æ–ª–æ–¥–∂—É–π—Å—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫–æ–º üòä", parse_mode="HTML", reply_markup=kb)


def auto_backup():
    print(f"{Fore.LIGHTYELLOW_EX}[INFO] Auto-backup function started!{Fore.RESET}")
    while True:

        try:
            with open("remind.txt", "w") as file:
                for user_id in remind:
                    file.write(f"{user_id}\n")

        except Exception as e:
            print(f"{Fore.LIGHTRED_EX}[ERROR] An error occurred during auto-backup: {e}{Fore.RESET}")

        time.sleep(5)

def reminder(bot):
    print(f"{Fore.LIGHTYELLOW_EX}[INFO] Reminder function started!{Fore.RESET}")

    try:
        while True:
            now = datetime.now()
            weekday = now.strftime("%A")
            current_time = now.strftime("%H:%M")

            if weekday in days:
                for lesson_time, details in days[weekday].items():
                    lesson_dt = datetime.strptime(lesson_time, "%H:%M")
                    reminder_time = (lesson_dt - timedelta(minutes=15)).strftime("%H:%M")

                    if current_time == reminder_time and details:
                        for user_id in remind:
                            try:
                                bot.send_message(
                                    user_id,
                                    f"üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –∑–∞–Ω—è—Ç—Ç—è:\n\nüïí {lesson_time} (—á–µ—Ä–µ–∑ 15 —Ö–≤–∏–ª–∏–Ω)\n{details}",
                                    parse_mode="HTML"
                                )
                            except Exception as e:
                                print(f"{Fore.LIGHTRED_EX}[ERROR] Could not send reminder to user {user_id}: {e}{Fore.RESET}")

                                if "bot was blocked by the user" in str(e):
                                    remind.remove(user_id)
                                    print(f"{Fore.LIGHTYELLOW_EX}[INFO] Removed user {user_id} from reminder list due to block.{Fore.RESET}")

                        time.sleep(60)

    except Exception as e:
        print(f"{Fore.LIGHTRED_EX}[ERROR] An error occurred in the reminder function: {e}{Fore.RESET}")

def alive():
    app = flask.Flask(__name__)

    @app.route('/')
    def index():
        return "Bot is running!"

    app.run(host='0.0.0.0', port=8080)

print(f"{Fore.LIGHTYELLOW_EX}[INFO] Alive func started!{Fore.RESET}")
Thread(target=alive).start()
print(f"{Fore.LIGHTYELLOW_EX}[INFO] Bot started!{Fore.RESET}")
Thread(target=reminder, args=[bot]).start()
Thread(target=auto_backup).start()
while True:
    try:
        bot.polling(none_stop=True)
    except:
        pass


